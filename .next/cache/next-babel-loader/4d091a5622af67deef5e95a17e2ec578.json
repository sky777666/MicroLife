{"ast":null,"code":"var _jsxFileName = \"/Users/lukemyers/Desktop/NewProjects2020/MicroLife/pages/index.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../components/Layout';\nimport Card from '../components/card';\nimport Form from '../components/Form';\nimport Weather from '../components/Weather';\nimport Fetch from 'isomorphic-unfetch';\nimport Footer from '../components/Footer';\nimport YouTubePlayList from '../components/YoutubePlayList';\nimport NewForm from '../components/NewForm';\nimport ReactPlayer from 'react-player/';\nexport default function Home({\n  data\n}) {\n  // console.log('data', data);\n  // export default function Home() {\n  useEffect(() => {\n    document.body.style.backgroundColor = '#4a5f6b';\n  }); // // YOUTUBE API\n  // const YOUTUBE_PLAYLIST_ITEMS_API = 'https://www.googleapis.com/youtube/v3/playlistItems';\n  // export async function getServerSideProps() {\n  //   const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS_API}?part=snippet&maxResults=20&playlistId=PLEFeVUxfZMzG6S5IbN-GuJKd3841EaqkM&key=${process.env.YOUTUBE_API_KEY}`)\n  //   const data = await res.json();\n  //   return {\n  //     props: {\n  //       data\n  //     }\n  //   }\n  // }\n  // WEATHER API \n\n  const {\n    0: weather,\n    1: setWeather\n  } = useState([]); // const APIKEY = `${APIKEY}`\n\n  const APIKEY = '0b19f325bc0d435df2d6ef551d0c5e32';\n\n  async function fetchData(e) {\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    e.preventDefault();\n    const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=${APIKEY}`) //const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${APIKEY}`)\n    .then(res => res.json()).then(data => data);\n\n    if (city && country) {\n      setWeather({\n        data: apiData,\n        city: apiData.city,\n        country: apiData.sys.country,\n        description: apiData.weather[0].description,\n        temperature: apiData.main.temp,\n        error: \"\"\n      });\n    } else {\n      setWeather({\n        data: '',\n        city: '',\n        country: '',\n        description: '',\n        temperature: '',\n        error: \"Please Type A City And Country\"\n      });\n    }\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }\n  }, __jsx(\"div\", {\n    className: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Libre+Caslon+Display&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }\n  })), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 1\n    }\n  }), __jsx(\"div\", {\n    className: styles.weatherApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 2\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"WEATHER APP\"), __jsx(\"div\", {\n    className: styles.weatherForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    getWeather: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  })), __jsx(\"div\", {\n    className: styles.weatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Weather, {\n    city: weather.city,\n    country: weather.country,\n    description: weather.description,\n    temperature: weather.temperature,\n    error: weather.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  })), console.log(weather.data)), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignContent: \"center\",\n      position: \"relative\",\n      left: '20%',\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, __jsx(ReactPlayer, {\n    url: \"https://www.youtube.com/watch?v=JZjzQhFG6Ec&t=132s\",\n    controls: true,\n    loop: true,\n    muted: true,\n    autoplay: true,\n    background: true,\n    playing: true,\n    width: \"700px\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  })))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 1\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lukemyers/Desktop/NewProjects2020/MicroLife/pages/index.js"],"names":["Head","styles","React","useEffect","useState","Layout","Card","Form","Weather","Fetch","Footer","YouTubePlayList","NewForm","ReactPlayer","Home","data","document","body","style","backgroundColor","weather","setWeather","APIKEY","fetchData","e","city","target","elements","value","country","preventDefault","apiData","fetch","then","res","json","sys","description","temperature","main","temp","error","wrapper","container","weatherApp","weatherForm","weatherData","console","log","display","alignContent","position","left","width"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport React, { useEffect, useState } from 'react'\nimport Layout from '../components/Layout'\nimport Card from '../components/card'\nimport Form from '../components/Form';\nimport Weather from '../components/Weather';\nimport Fetch from 'isomorphic-unfetch';\nimport Footer from '../components/Footer'\nimport YouTubePlayList from '../components/YoutubePlayList'\nimport NewForm from '../components/NewForm'\nimport ReactPlayer from 'react-player/'\n\n\n\nexport default function Home({ data }) {\n\n\n  // console.log('data', data);\n// export default function Home() {\n\n  useEffect(() => {\n    document.body.style.backgroundColor = '#4a5f6b'\n    \n})\n\n\n\n\n\n// // YOUTUBE API\n// const YOUTUBE_PLAYLIST_ITEMS_API = 'https://www.googleapis.com/youtube/v3/playlistItems';\n\n// export async function getServerSideProps() {\n//   const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS_API}?part=snippet&maxResults=20&playlistId=PLEFeVUxfZMzG6S5IbN-GuJKd3841EaqkM&key=${process.env.YOUTUBE_API_KEY}`)\n//   const data = await res.json();\n//   return {\n//     props: {\n//       data\n//     }\n//   }\n// }\n\n\n\n// WEATHER API \nconst [weather,setWeather] = useState([])\n  // const APIKEY = `${APIKEY}`\n  const  APIKEY = '0b19f325bc0d435df2d6ef551d0c5e32'\n\n  async function fetchData(e) {\n    const city = e.target.elements.city.value\n    const country = e.target.elements.country.value\n      e.preventDefault()\n      const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=${APIKEY}`)\n    //const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${APIKEY}`)\n      .then( res => res.json())\n      .then(data => data)\n      if(city && country) {\n      setWeather({\n        data: apiData,\n        city: apiData.city,\n        country: apiData.sys.country,\n        description: apiData.weather[0].description,\n        temperature: apiData.main.temp,\n        error:\"\"\n      }\n      )} else {\n        setWeather({\n          data: '',\n          city: '',\n          country: '',\n          description: '',\n          temperature: '',\n          error:\"Please Type A City And Country\"\n      }\n      )}\n  }\n\n\n\n\n  return (\n<Layout>\n    <div className={styles.wrapper}>\n      \n            <link href=\"https://fonts.googleapis.com/css2?family=Libre+Caslon+Display&display=swap\" rel=\"stylesheet\" />\n            {/* <Navbar /> */}\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <main>\n   \n     <div>\n       <Card />\n     </div>\n\n    {/* <YouTubePlayList /> */}\n    {/* <ul className={styles.grid}>\n  {data.items.map(({ id, snippet = {} }) => {\n    const { title, thumbnails = {}, resourceId = {} } = snippet;\n    const { medium } = thumbnails;\n\n    return (\n      <li key={id} className={styles.card}>\n        <a href={`https://www.youtube.com/watch?v=${resourceId.videoId}`}>\n          <p>\n            <img width={medium.width} height={medium.height} src={medium.url} alt=\"\" />\n          </p>\n          <h3>{ title }</h3>\n        </a>\n      </li>\n    )\n  })} */}\n{/* </ul> */}\n  \n<hr></hr>\n\n <div className={styles.weatherApp}>\n      <h3>WEATHER APP</h3>\n      <div className={styles.weatherForm}>\n      <Form getWeather={fetchData} />\n      </div>\n      <div className={styles.weatherData}>\n      <Weather\n      city={weather.city}\n      country={weather.country}\n      description={weather.description}\n      temperature={weather.temperature}\n      error={weather.error}\n      /></div>\n      {console.log(weather.data)}\n    </div> \n\n    <div style ={{\n      display: \"flex\",\n      alignContent: \"center\",\n      position: \"relative\",\n      left: '20%',\n      width: \"100%\",\n    }}>\n    <ReactPlayer url=\"https://www.youtube.com/watch?v=JZjzQhFG6Ec&t=132s\" controls={true} loop ={true} muted={true} autoplay={true} background={true} playing={true} width='700px' height='500px'  />\n    </div>\n      </main>\n</div>\n\n  {/* <NewForm /> */}\n\n\n\n\n<Footer />\n  </div>\n  </Layout>\n\n  );\n\n}   \n"]},"metadata":{},"sourceType":"module"}