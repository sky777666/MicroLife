{"ast":null,"code":"var _jsxFileName = \"/Users/lukemyers/Desktop/NewProjects2020/MicroLife/pages/space.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gsap from 'gsap';\n\nconst Space = () => {\n  gsap.registerPlugin(ScrollTrigger);\n  gsap.utils.toArray(\".panel\").forEach((panel, i) => {\n    ScrollTrigger.create({\n      trigger: panel,\n      start: \"top top\",\n      pin: true,\n      pinSpacing: false\n    });\n  });\n  ScrollTrigger.create({\n    snap: 1 / 4 // snap whole page to the closest section!\n\n  });\n  const router = useRouter();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"description panel blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  }, \"Layered pinning\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"Use pinning to layer panels on top of each other as you scroll.\"), __jsx(\"div\", {\n    class: \"scroll-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Scroll down\", __jsx(\"div\", {\n    class: \"arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 41\n    }\n  })))), __jsx(\"section\", {\n    class: \"panel red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  }, \"ONE\"), __jsx(\"section\", {\n    class: \"panel orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }\n  }, \"TWO\"), __jsx(\"section\", {\n    class: \"panel purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }\n  }, \"THREE\"), __jsx(\"section\", {\n    class: \"panel green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }\n  }, \"FOUR\"), __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }\n  }, __jsx(\"a\", {\n    href: \"https://greensock.com/scrolltrigger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    class: \"greensock-icon\",\n    src: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/scroll-trigger-logo-light.svg\",\n    width: \"200\",\n    height: \"64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Space; // import {db } from \"../../src/db\"\n// export default function Picture({job}) {\n//     return <div><h1>{job.title}</h1></div>;\n//     export async function getServerSideProps({ params }) {\n//         const job = await db>Selection('*')\n//         .from(\"jobs\")\n//         .where({ id: params.id })\n//         .first();\n//         console.log(job)\n//         return {\n//             props: {job},\n//         };\n//     }","map":{"version":3,"sources":["/Users/lukemyers/Desktop/NewProjects2020/MicroLife/pages/space.js"],"names":["React","useRouter","gsap","Space","registerPlugin","ScrollTrigger","utils","toArray","forEach","panel","i","create","trigger","start","pin","pinSpacing","snap","router"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,SAAV,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAOA,MAAMC,KAAK,GAAG,MAAM;AAEhBD,EAAAA,IAAI,CAACE,cAAL,CAAoBC,aAApB;AAEAH,EAAAA,IAAI,CAACI,KAAL,CAAWC,OAAX,CAAmB,QAAnB,EAA6BC,OAA7B,CAAqC,CAACC,KAAD,EAAQC,CAAR,KAAc;AACjDL,IAAAA,aAAa,CAACM,MAAd,CAAqB;AACnBC,MAAAA,OAAO,EAAEH,KADU;AAEnBI,MAAAA,KAAK,EAAE,SAFY;AAGnBC,MAAAA,GAAG,EAAE,IAHc;AAInBC,MAAAA,UAAU,EAAE;AAJO,KAArB;AAMD,GAPD;AAUAV,EAAAA,aAAa,CAACM,MAAd,CAAqB;AACnBK,IAAAA,IAAI,EAAE,IAAI,CADS,CACP;;AADO,GAArB;AAIJ,QAAMC,MAAM,GAAGhB,SAAS,EAAxB;AAEI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAER;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAL,EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADF,EAEE;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,CAFF,CADF,CAFQ,EAUR;AAAS,IAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVQ,EAaR;AAAS,IAAA,KAAK,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbQ,EAgBR;AAAS,IAAA,KAAK,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBQ,EAmBR;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBQ,EA2BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAG,IAAA,IAAI,EAAC,qCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAA4B,IAAA,GAAG,EAAC,kFAAhC;AAAmH,IAAA,KAAK,EAAC,KAAzH;AAA+H,IAAA,MAAM,EAAC,IAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,CA3BQ,CADJ;AAuCH,CA3DD;;AA6DA,eAAeE,KAAf,C,CAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport  { useRouter } from 'next/router'\nimport gsap from 'gsap'\n  \n\n\n\n\n\nconst Space = () => {\n\n    gsap.registerPlugin(ScrollTrigger);\n\n    gsap.utils.toArray(\".panel\").forEach((panel, i) => {\n      ScrollTrigger.create({\n        trigger: panel,\n        start: \"top top\", \n        pin: true, \n        pinSpacing: false \n      });\n    });\n    \n    \n    ScrollTrigger.create({\n      snap: 1 / 4 // snap whole page to the closest section!\n    });\n    \nconst router = useRouter();\n\n    return (\n        <div>\n           \n<div class=\"description panel blue\">\n  <div><h1>Layered pinning</h1>\n    <p>Use pinning to layer panels on top of each other as you scroll.</p>\n    <div class=\"scroll-down\">Scroll down<div class=\"arrow\"></div></div>\n  </div>\n</div>\n\n\n<section class=\"panel red\">\n\tONE\n</section>\n<section class=\"panel orange\">\n\tTWO\n</section>\n<section class=\"panel purple\">\n\tTHREE\n</section>\n<section class=\"panel green\">\n\tFOUR\n</section>\n\n\n\n\n\n<header>\n   <a href=\"https://greensock.com/scrolltrigger\">\n     <img class=\"greensock-icon\" src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/scroll-trigger-logo-light.svg\" width=\"200\" height=\"64\" />\n  </a> \n</header>\n\n\n\n\n        </div>\n    );\n};\n\nexport default Space;\n\n\n// import {db } from \"../../src/db\"\n\n// export default function Picture({job}) {\n//     return <div><h1>{job.title}</h1></div>;\n\n//     export async function getServerSideProps({ params }) {\n//         const job = await db>Selection('*')\n//         .from(\"jobs\")\n//         .where({ id: params.id })\n//         .first();\n//         console.log(job)\n\n//         return {\n//             props: {job},\n//         };\n//     }\n"]},"metadata":{},"sourceType":"module"}