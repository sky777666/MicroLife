{"ast":null,"code":"var _jsxFileName = \"/Users/lukemyers/Desktop/NewProjects2020/MicroLife/pages/index.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../components/Layout';\nimport NasaPhoto from '../components/NasaPhoto';\nimport Card from '../components/card';\nimport Form from '../components/Form';\nimport Weather from '../components/Weather';\nimport Fetch from 'isomorphic-unfetch';\nimport Footer from '../components/Footer';\nimport YouTubePlayList from '../components/YoutubePlayList';\nimport NewForm from '../components/NewForm';\nexport async function getServerSideProps() {\n  const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS_API}?part=snippet&maxResults=20&playlistId=PLEFeVUxfZMzG6S5IbN-GuJKd3841EaqkM&key=${process.env.YOUTUBE_API_KEY}`);\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default function Home({\n  data\n}) {\n  // console.log('data', data);\n  // export default function Home() {\n  useEffect(() => {\n    document.body.style.backgroundColor = '#4a5f6b';\n  }); // YOUTUBE API\n\n  const YOUTUBE_PLAYLIST_ITEMS_API = 'https://www.googleapis.com/youtube/v3/playlistItems'; // WEATHER API \n\n  const {\n    0: weather,\n    1: setWeather\n  } = useState([]); // const APIKEY = `${APIKEY}`\n\n  const APIKEY = '0b19f325bc0d435df2d6ef551d0c5e32';\n\n  async function fetchData(e) {\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    e.preventDefault();\n    const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=${APIKEY}`) //const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${APIKEY}`)\n    .then(res => res.json()).then(data => data);\n\n    if (city && country) {\n      setWeather({\n        data: apiData,\n        city: apiData.city,\n        country: apiData.sys.country,\n        description: apiData.weather[0].description,\n        temperature: apiData.main.temp,\n        error: \"\"\n      });\n    } else {\n      setWeather({\n        data: '',\n        city: '',\n        country: '',\n        description: '',\n        temperature: '',\n        error: \"Please Type A City And Country\"\n      });\n    }\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }\n  }, __jsx(\"div\", {\n    className: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Libre+Caslon+Display&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(NasaPhoto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  })), __jsx(\"ul\", {\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, data.items.map(({\n    id,\n    snippet = {}\n  }) => {\n    const {\n      title,\n      thumbnails = {},\n      resourceId = {}\n    } = snippet;\n    const {\n      medium\n    } = thumbnails;\n    return __jsx(\"li\", {\n      key: id,\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      href: `https://www.youtube.com/watch?v=${resourceId.videoId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      width: medium.width,\n      height: medium.height,\n      src: medium.url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, title)));\n  })), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 1\n    }\n  }), __jsx(\"div\", {\n    className: styles.weatherApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 2\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"WEATHER APP\"), __jsx(\"div\", {\n    className: styles.weatherForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    getWeather: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  })), __jsx(\"div\", {\n    className: styles.weatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, __jsx(Weather, {\n    city: weather.city,\n    country: weather.country,\n    description: weather.description,\n    temperature: weather.temperature,\n    error: weather.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  })), console.log(weather.data)))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 1\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lukemyers/Desktop/NewProjects2020/MicroLife/pages/index.js"],"names":["Head","styles","React","useEffect","useState","Layout","NasaPhoto","Card","Form","Weather","Fetch","Footer","YouTubePlayList","NewForm","getServerSideProps","res","fetch","YOUTUBE_PLAYLIST_ITEMS_API","process","env","YOUTUBE_API_KEY","data","json","props","Home","document","body","style","backgroundColor","weather","setWeather","APIKEY","fetchData","e","city","target","elements","value","country","preventDefault","apiData","then","sys","description","temperature","main","temp","error","wrapper","container","grid","items","map","id","snippet","title","thumbnails","resourceId","medium","card","videoId","width","height","url","weatherApp","weatherForm","weatherData","console","log"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport React, { useEffect, useState } from 'react'\nimport Layout from '../components/Layout'\nimport NasaPhoto from '../components/NasaPhoto'\nimport Card from '../components/card'\nimport Form from '../components/Form';\nimport Weather from '../components/Weather';\nimport Fetch from 'isomorphic-unfetch';\nimport Footer from '../components/Footer'\nimport YouTubePlayList from '../components/YoutubePlayList'\nimport NewForm from '../components/NewForm'\n\n\nexport async function getServerSideProps() {\n  const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS_API}?part=snippet&maxResults=20&playlistId=PLEFeVUxfZMzG6S5IbN-GuJKd3841EaqkM&key=${process.env.YOUTUBE_API_KEY}`)\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  }\n}\n\nexport default function Home({ data }) {\n\n\n  // console.log('data', data);\n// export default function Home() {\n\n  useEffect(() => {\n    document.body.style.backgroundColor = '#4a5f6b'\n    \n})\n\n\n\n\n\n// YOUTUBE API\nconst YOUTUBE_PLAYLIST_ITEMS_API = 'https://www.googleapis.com/youtube/v3/playlistItems';\n\n\n\n\n\n// WEATHER API \nconst [weather,setWeather] = useState([])\n  // const APIKEY = `${APIKEY}`\n  const  APIKEY = '0b19f325bc0d435df2d6ef551d0c5e32'\n\n  async function fetchData(e) {\n    const city = e.target.elements.city.value\n    const country = e.target.elements.country.value\n      e.preventDefault()\n      const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=${APIKEY}`)\n    //const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${APIKEY}`)\n      .then( res => res.json())\n      .then(data => data)\n      if(city && country) {\n      setWeather({\n        data: apiData,\n        city: apiData.city,\n        country: apiData.sys.country,\n        description: apiData.weather[0].description,\n        temperature: apiData.main.temp,\n        error:\"\"\n      }\n      )} else {\n        setWeather({\n          data: '',\n          city: '',\n          country: '',\n          description: '',\n          temperature: '',\n          error:\"Please Type A City And Country\"\n      }\n      )}\n  }\n\n\n\n\n  return (\n<Layout>\n    <div className={styles.wrapper}>\n      \n            <link href=\"https://fonts.googleapis.com/css2?family=Libre+Caslon+Display&display=swap\" rel=\"stylesheet\" />\n            {/* <Navbar /> */}\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <main>\n      <div>\n      <NasaPhoto />\n      </div>\n     <div>\n       <Card />\n     </div>\n\n    {/* <YouTubePlayList /> */}\n    <ul className={styles.grid}>\n  {data.items.map(({ id, snippet = {} }) => {\n    const { title, thumbnails = {}, resourceId = {} } = snippet;\n    const { medium } = thumbnails;\n\n    return (\n      <li key={id} className={styles.card}>\n        <a href={`https://www.youtube.com/watch?v=${resourceId.videoId}`}>\n          <p>\n            <img width={medium.width} height={medium.height} src={medium.url} alt=\"\" />\n          </p>\n          <h3>{ title }</h3>\n        </a>\n      </li>\n    )\n  })}\n</ul>\n  \n<hr></hr>\n\n <div className={styles.weatherApp}>\n      <h3>WEATHER APP</h3>\n      <div className={styles.weatherForm}>\n      <Form getWeather={fetchData} />\n      </div>\n      <div className={styles.weatherData}>\n      <Weather\n      city={weather.city}\n      country={weather.country}\n      description={weather.description}\n      temperature={weather.temperature}\n      error={weather.error}\n      /></div>\n      {console.log(weather.data)}\n    </div> \n\n\n\n      </main>\n</div>\n\n  {/* <NewForm /> */}\n\n\n\n\n<Footer />\n  </div>\n  </Layout>\n\n  );\n\n}   \n"]},"metadata":{},"sourceType":"module"}