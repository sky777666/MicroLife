{"ast":null,"code":"var _jsxFileName = \"/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/YoutubePlayList.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from '../styles/Home.module.css'; // YOUTUBE API\n\nconst YOUTUBE_PLAYLIST_ITEMS_API = 'https://www.googleapis.com/youtube/v3/playlistItems';\nexport async function getServerSideProps() {\n  const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS_API}?part=snippet&maxResults=20&playlistId=PLEFeVUxfZMzG6S5IbN-GuJKd3841EaqkM&key=${process.env.YOUTUBE_API_KEY}`);\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n}\n\nconst YoutubePlayList = ({\n  data\n}) => {\n  console.log('data', data);\n  return __jsx(\"ul\", {\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }\n  }, data.items.map(({\n    id,\n    snippet = {}\n  }) => {\n    const {\n      title,\n      thumbnails = {},\n      resourceId = {}\n    } = snippet;\n    const {\n      medium\n    } = thumbnails;\n    return __jsx(\"li\", {\n      key: id,\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      href: `https://www.youtube.com/watch?v=${resourceId.videoId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      width: medium.width,\n      height: medium.height,\n      src: medium.url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    })), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, title)));\n  }));\n};\n\nexport default YoutubePlayList;","map":{"version":3,"sources":["/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/YoutubePlayList.js"],"names":["React","styles","YOUTUBE_PLAYLIST_ITEMS_API","getServerSideProps","res","fetch","process","env","YOUTUBE_API_KEY","data","json","props","YoutubePlayList","console","log","grid","items","map","id","snippet","title","thumbnails","resourceId","medium","card","videoId","width","height","url"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CAGA;;AACA,MAAMC,0BAA0B,GAAG,qDAAnC;AAEA,OAAO,eAAeC,kBAAf,GAAoC;AACzC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,0BAA2B,iFAAgFI,OAAO,CAACC,GAAR,CAAYC,eAAgB,EAA3I,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLF,MAAAA;AADK;AADF,GAAP;AAKD;;AAED,MAAMG,eAAe,GAAG,CAAC;AAACH,EAAAA;AAAD,CAAD,KAAY;AAEhCI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAApB;AAEJ,SAEA;AAAI,IAAA,SAAS,EAAER,MAAM,CAACc,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,OAAO,GAAG;AAAhB,GAAD,KAA0B;AACxC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,UAAU,GAAG,EAAtB;AAA0BC,MAAAA,UAAU,GAAG;AAAvC,QAA8CH,OAApD;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAaF,UAAnB;AACA,WACE;AAAI,MAAA,GAAG,EAAEH,EAAT;AAAa,MAAA,SAAS,EAAEjB,MAAM,CAACuB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAG,mCAAkCF,UAAU,CAACG,OAAQ,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAEF,MAAM,CAACG,KAAnB;AAA0B,MAAA,MAAM,EAAEH,MAAM,CAACI,MAAzC;AAAiD,MAAA,GAAG,EAAEJ,MAAM,CAACK,GAA7D;AAAkE,MAAA,GAAG,EAAC,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMR,KAAN,CAJF,CADF,CADF;AAUD,GAbA,CADH,CAFA;AAoBC,CAxBD;;AA0BA,eAAeR,eAAf","sourcesContent":["import React from 'react';\nimport styles from '../styles/Home.module.css'\n\n\n// YOUTUBE API\nconst YOUTUBE_PLAYLIST_ITEMS_API = 'https://www.googleapis.com/youtube/v3/playlistItems';\n\nexport async function getServerSideProps() {\n  const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS_API}?part=snippet&maxResults=20&playlistId=PLEFeVUxfZMzG6S5IbN-GuJKd3841EaqkM&key=${process.env.YOUTUBE_API_KEY}`)\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  }\n}\n\nconst YoutubePlayList = ({data}) => {\n\n    console.log('data', data);\n\nreturn (\n\n<ul className={styles.grid}>\n  {data.items.map(({ id, snippet = {} }) => {\n    const { title, thumbnails = {}, resourceId = {} } = snippet;\n    const { medium } = thumbnails;\n    return (\n      <li key={id} className={styles.card}>\n        <a href={`https://www.youtube.com/watch?v=${resourceId.videoId}`}>\n          <p>\n            <img width={medium.width} height={medium.height} src={medium.url} alt=\"\" />\n          </p>\n          <h3>{ title }</h3>\n        </a>\n      </li>\n    )\n  })}\n</ul>\n\n)\n};\n\nexport default YoutubePlayList;"]},"metadata":{},"sourceType":"module"}