{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/NasaPhoto.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport styles from '../styles/Home.module.css';\nexport default function NasaPhoto() {\n  _s();\n\n  var apiKey = process.env.REACT_APP_NASA_KEY;\n\n  var _useState = useState(null),\n      photoData = _useState[0],\n      setPhotoData = _useState[1];\n\n  useEffect(function () {\n    fetchPhoto();\n\n    function fetchPhoto() {\n      return _fetchPhoto.apply(this, arguments);\n    }\n\n    function _fetchPhoto() {\n      _fetchPhoto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch( // `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`);\n                \"https://api.nasa.gov/planetary/apod?api_key=ubSCXJxjbfE09258JhPKN7gCLejksuSpAvc8uI7I\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                setPhotoData(data);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchPhoto.apply(this, arguments);\n    }\n  }, []);\n  if (!photoData) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }\n  });\n  return __jsx(\"div\", {\n    className: styles.nasaphoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, photoData.media_type === \"image\" ? __jsx(\"img\", {\n    src: photoData.url,\n    alt: photoData.title,\n    className: styles.photo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }) : __jsx(\"iframe\", {\n    title: \"space-video\",\n    src: photoData.url,\n    frameBorder: \"0\",\n    gesture: \"media\",\n    allow: \"encrypted-media\",\n    allowFullScreen: true,\n    className: styles.photo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, photoData.title), __jsx(\"p\", {\n    className: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, photoData.date), __jsx(\"p\", {\n    className: styles.explanation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, photoData.explanation)));\n}\n\n_s(NasaPhoto, \"MABsDYcrxx26IPcq9frJbzza9Hs=\");\n\n_c = NasaPhoto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NasaPhoto\");","map":{"version":3,"sources":["/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/NasaPhoto.js"],"names":["React","useState","useEffect","styles","NasaPhoto","apiKey","process","env","REACT_APP_NASA_KEY","photoData","setPhotoData","fetchPhoto","fetch","res","json","data","nasaphoto","media_type","url","title","photo","date","explanation"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAKA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAGlC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA3B;;AAHkC,kBAIAP,QAAQ,CAAC,IAAD,CAJR;AAAA,MAI3BQ,SAJ2B;AAAA,MAIhBC,YAJgB;;AAMlCR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,UAAU;;AADI,aAGCA,UAHD;AAAA;AAAA;;AAAA;AAAA,6EAGd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBC,KAAK,EACrB;AADqB,uGADzB;;AAAA;AACQC,gBAAAA,GADR;AAAA;AAAA,uBAQqBA,GAAG,CAACC,IAAJ,EARrB;;AAAA;AAQQC,gBAAAA,IARR;AASEL,gBAAAA,YAAY,CAACK,IAAD,CAAZ;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHc;AAAA;AAAA;AAcf,GAdQ,EAcN,EAdM,CAAT;AAgBA,MAAI,CAACN,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhB,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACa,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKP,SAAS,CAACQ,UAAV,KAAyB,OAAzB,GACC;AACE,IAAA,GAAG,EAAER,SAAS,CAACS,GADjB;AAEE,IAAA,GAAG,EAAET,SAAS,CAACU,KAFjB;AAGE,IAAA,SAAS,EAAEhB,MAAM,CAACiB,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,GAAG,EAAEX,SAAS,CAACS,GAFjB;AAGE,IAAA,WAAW,EAAC,GAHd;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,KAAK,EAAC,iBALR;AAME,IAAA,eAAe,MANjB;AAOE,IAAA,SAAS,EAAEf,MAAM,CAACiB,KAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,SAAS,CAACU,KAAf,CADF,EAEE;AAAG,IAAA,SAAS,EAAEhB,MAAM,CAACkB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BZ,SAAS,CAACY,IAAtC,CAFF,EAGE;AAAG,IAAA,SAAS,EAAElB,MAAM,CAACmB,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCb,SAAS,CAACa,WAA7C,CAHF,CAvBF,CADF;AAmCD;;GA3DuBlB,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from '../styles/Home.module.css'\n\n \n\n\nexport default function NasaPhoto() {\n  \n\n  const apiKey = process.env.REACT_APP_NASA_KEY;\n  const [photoData, setPhotoData] = useState(null);\n\n  useEffect(() => {\n    fetchPhoto();\n\n    async function fetchPhoto() {\n      const res = await fetch( \n        // `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`);\n               \n       `https://api.nasa.gov/planetary/apod?api_key=ubSCXJxjbfE09258JhPKN7gCLejksuSpAvc8uI7I` \n       );\n\n  \n      const data = await res.json();\n      setPhotoData(data);\n    }\n  }, []);\n\n  if (!photoData) return <div />;\n\n  return (\n    <div className={styles.nasaphoto}>\n       \n        {photoData.media_type === \"image\" ? (\n          <img\n            src={photoData.url}\n            alt={photoData.title}\n            className={styles.photo}\n          />\n        ) : (\n          <iframe\n            title=\"space-video\"\n            src={photoData.url}\n            frameBorder=\"0\"\n            gesture=\"media\"\n            allow=\"encrypted-media\"\n            allowFullScreen\n            className={styles.photo}\n          />\n        )}\n          {/* // src={photoData.url}\n          // alt={photoData.title}\n          // className=\"photo\" */}\n        \n      <div>\n        <h1>{photoData.title}</h1>\n        <p className={styles.date}>{photoData.date}</p>\n        <p className={styles.explanation}>{photoData.explanation}</p>\n      </div>\n    </div>\n\n\n        \n\n  );\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}