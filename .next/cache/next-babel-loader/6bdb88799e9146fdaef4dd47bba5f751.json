{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/NewForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nexport default function NewForm() {\n  _s();\n\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"You are not logged in\"),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  function submitForm() {\n    return _submitForm.apply(this, arguments);\n  }\n\n  function _submitForm() {\n    _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, token, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/login', {\n                method: 'POST',\n                body: JSON.stringify({\n                  username: username,\n                  password: password\n                })\n              }).then(function (t) {\n                return t.json();\n              });\n\n            case 2:\n              res = _context.sent;\n              token = res.token;\n\n              if (token) {\n                json = jwt.decode(token);\n                setMessage('Welcome' + json.username + 'and your are Logged in');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submitForm.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, message), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: username,\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    defaultValue: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"Login\",\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(NewForm, \"bjAzf6rjMIsPYusIsDtz5JQAXS8=\");\n\n_c = NewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"sources":["/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/NewForm.js"],"names":["useState","NewForm","username","setUsername","password","setPassword","message","setMessage","submitForm","fetch","method","body","JSON","stringify","then","t","json","res","token","jwt","decode","e","target","value"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA,kBAEGD,QAAQ,CAAC,EAAD,CAFX;AAAA,MAEtBE,QAFsB;AAAA,MAEZC,WAFY;;AAAA,mBAGGH,QAAQ,CAAC,EAAD,CAHX;AAAA,MAGtBI,QAHsB;AAAA,MAGZC,WAHY;;AAAA,mBAMEL,QAAQ,CAAC,uBAAD,CANV;AAAA,MAMrBM,OANqB;AAAA,MAMZC,UANY;;AAAA,WAQfC,UARe;AAAA;AAAA;;AAAA;AAAA,2EAQ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACkBC,KAAK,CAAC,YAAD,EAAe;AAClCC,gBAAAA,MAAM,EAAE,MAD0B;AAElCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEX,kBAAAA,QAAQ,EAARA,QAAF;AAAYE,kBAAAA,QAAQ,EAARA;AAAZ,iBAAf;AAF4B,eAAf,CAAL,CAGfU,IAHe,CAGV,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAACC,IAAF,EAAP;AAAA,eAHU,CADlB;;AAAA;AACMC,cAAAA,GADN;AAMMC,cAAAA,KANN,GAMcD,GAAG,CAACC,KANlB;;AAOA,kBAAIA,KAAJ,EAAW;AACDF,gBAAAA,IADC,GACMG,GAAG,CAACC,MAAJ,CAAWF,KAAX,CADN;AAEPX,gBAAAA,UAAU,CAAC,YAAYS,IAAI,CAACd,QAAjB,GAA4B,wBAA7B,CAAV;AACH;;AAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAR8B;AAAA;AAAA;;AAqB9B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,OAAL,CADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,KAAK,EAAEJ,QAFP;AAGA,IAAA,QAAQ,EAAE,kBAACmB,CAAD;AAAA,aAAOlB,WAAW,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,QAAQ,EAAE,kBAACF,CAAD;AAAA,aAAOlB,WAAW,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KAHV;AAIA,IAAA,YAAY,EAAE,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,OAA3B;AAAmC,IAAA,OAAO,EAAEf,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAFJ,CADJ;AAqBH;;GA1CuBP,O;;KAAAA,O","sourcesContent":["import { useState } from 'react'\n\nexport default function NewForm() {\n\n    const [ username, setUsername] = useState('')\n    const [ password, setPassword] = useState('')\n\n\n     const [ message, setMessage] = useState(\"You are not logged in\")\n\n    async function submitForm() {\n    const res = await fetch('/api/login', {\n        method: 'POST',\n        body: JSON.stringify({ username, password })\n    }).then((t) => t.json())\n\n    const token = res.token\n    if (token) {\n        const json = jwt.decode(token)\n        setMessage('Welcome' + json.username + 'and your are Logged in')\n    }\n}\n\n    return (\n        <div>\n          <h1>{message}</h1>\n            <form>\n                <input \n                type=\"text\" \n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                 />\n                <br />\n                <input \n                type=\"password\" \n                name=\"password\" \n                onChange={(e) => setUsername(e.target.value)}\n                defaultValue= \"admin\" />\n                <br />\n                <input type=\"button\" value=\"Login\" onClick={submitForm}/>\n                \n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}