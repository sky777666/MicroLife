{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/NavBar2.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar NavBar2 = function NavBar2() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setOpen(!isOpen);\n    },\n    className: \"hamburger-button \".concat(isOpen ? \"open\" : \"close\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"panel \".concat(isOpen ? \"open\" : \"close\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }\n  }, \"You\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }\n  }, \"Look\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }, \"Nice\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, \"Today\")))));\n};\n\n_s(NavBar2, \"WPi2qa4HrijmrT7XyqmH7MkbZuo=\");\n\n_c = NavBar2;\nexport default NavBar2;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar2\");","map":{"version":3,"sources":["/Users/lukemyers/Desktop/NewProjects2020/MicroLife/components/NavBar2.js"],"names":["React","NavBar2","useState","isOpen","setOpen"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,wBAEYD,KAAK,CAACE,QAAN,CAAe,KAAf,CAFZ;AAAA;AAAA,MAEPC,MAFO;AAAA,MAECC,OAFD;;AAId,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMA,OAAO,CAAC,CAACD,MAAF,CAAb;AAAA,KADX;AAEE,IAAA,SAAS,6BAAsBA,MAAM,GAAG,MAAH,GAAY,OAAxC,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAK,IAAA,SAAS,kBAAWA,MAAM,GAAG,MAAH,GAAY,OAA7B,CAAdaADF,CAVF,CADF,CALF,CADF;AA0BP,CA9BD;;GAAMF,O;;KAAAA,O;AAgCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\nconst NavBar2 = () => {\n    \n        const [isOpen, setOpen] = React.useState(false);\n\n        return (\n          <div>\n            <button\n              onClick={() => setOpen(!isOpen)}\n              className={`hamburger-button ${isOpen ? \"open\" : \"close\"}`}\n            />\n            <div className={`panel ${isOpen ? \"open\" : \"close\"}`}>\n              <ul>\n                <li>\n                  <a href=\"#\">You</a>\n                </li>\n                <li>\n                  <a href=\"#\">Look</a>\n                </li>\n                <li>\n                  <a href=\"#\">Nice</a>\n                </li>\n                <li>\n                  <a href=\"#\">Today</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        );\n    \n    \n};\n\nexport default NavBar2;"]},"metadata":{},"sourceType":"module"}